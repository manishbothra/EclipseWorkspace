var assistantDataService = function ($http, $rootScope, $q, $filter) {
       	var dataFactory = {
			cacheData: {},
			resetCache: function() {
				dataFactory['cacheData'] = {};
				dataFactory.cpCountryLoading = false;
			}
		};
		
		dataFactory.recognizeSearchPattern = function(payload) {
		return $http.post('/api/assistant/searchByVoice', payload)
	    	.then(function(response){
	    		return response.data;
	    	});
	    };
		
		dataFactory.startTradeAssistantSession = function(payload) {
		return $http.get('/api/assistant/initTradeAssistant', payload)
	    	.then(function(response){
	    		return response.data;
	    	});
	    };
		
		return dataFactory;
		
	};
	

	angular.module('c2iApp').filter('as_trusted', ['$sce', function($sce){
		return function(text) {
			return $sce.trustAsHtml(text);
		};
	}]);
	
	angular.module('c2iApp').factory('assistantDataService',assistantDataService);
	
	angular.module('c2iApp').directive('blink', function($timeout) {
		return {
			restrict: 'E',
			transclude: true,
			scope: {},
			template: '<span ng-transclude></span>',
			replace: true,
			controller: function($scope, $element) {
				function showElement() {
					$element.css("display", "inline");
					$timeout(hideElement, 1000);
				}

				function hideElement() {
					$element.css("display", "none");
					$timeout(showElement, 1000);
				}
				showElement();
			}
		};
	});
	
	angular.module('c2iApp').directive('speechDir', function (assistantDataService, $timeout, $http, $compile) {
		return {
			restrict: 'E',
			template: '<img ng-if="activateAssistant" ng-click="showSpeechModal()" src="/controlpanel/assets/images/mic-static.gif"></img>',
			link: function($scope, element, attrs) {
				
				$http.get('/controlpanel/app/c2iapp/partials/speech-modal-full.html').then(function(response) {
					var $modalHtml = $('<div />',{html:response.data});
					$('body').append($compile($modalHtml)($scope));				
				});
				
				$scope.activateAssistant = window.hasOwnProperty('webkitSpeechRecognition');
				$scope.modalOptions = {
					closeButtonText: 'Close',
					actionButtonText: 'Continue',
					headerText: 'Speak now to search',
					bodyText: '',
					closeModal : function() {
						if($scope.recognition) {
							$scope.recognition.stop();
						}
						$scope.speechForm = {};
						$('#c2iAssistanceModal').modal('hide');
						$scope.speakText('Good Bye.');
						$scope.assistantWorking = false;
					}	
				};
				
				$scope.speechInputPlaceholder = 'Tap on the mic and start speaking.';
				$('#c2iAssistanceModal').modal('hide');
				
				$scope.openSpeechModal = function() {
					$('#c2iAssistanceModal').modal('show');
					$scope.assistantWorking = true;
					$scope.startRecognition = true;					
				};
				
				$scope.t2sCallback = function() {
					//console.log('t2s ended.');
					if($scope.startRecognition) {
						$scope.setSpeechSearch(true);
						$scope.startDictation();
					}
				};
				
				//window.setInterval($scope.checkAssistant, 1000);
				
				$scope.setSpeechSearch = function(isStarted) {
					$scope.speechStarted = isStarted;
					$scope.speechHeaderText = isStarted ? 'Speaking....' : 'Speak now to search';
					$scope.speechInputPlaceholder = isStarted ? 'Speaking....' : 'Tap on the mic and start speaking.';
					$scope.analyzingInfo='Analyzing your query with Billion+ datasets...'
				};
				
				$scope.showSpeechModal = function() {
					
					$scope.speechForm = {};
					if(!$scope.answeredQueries || $scope.answeredQueries.length == 0) {
						$scope.answeredQueries.push({question:'', answer:'Hello! I am your global trade assistant. How could I help you today?'});
						$scope.callSpeechCallback = true;
						$scope.speakText('Hello! I am your global trade assistant. How could I help you today?', $scope.t2sCallback);
					}
					if(!$scope.assistantSessionId) {
						assistantDataService.startTradeAssistantSession().then(function(response) {
							$scope.assistantSessionId = response.data.sessionId;							
							$scope.openSpeechModal();
						});
					} else {
						$scope.openSpeechModal();
					}
					
				};

				$scope.startDictation = function () {
			
					if (window.hasOwnProperty('webkitSpeechRecognition')) {
						
						if(!$scope.recognition) {
							//console.log('Initializing the recognizer...');
							$scope.recognition = new webkitSpeechRecognition();

							$scope.recognition.continuous = false;
							$scope.recognition.interimResults = false;
							$scope.recognition.lang = "en-US";
							
							$scope.recognition.onresult = function(e) {
								//console.log('onresult recognition');
								document.getElementById('transcript').value
														 = e.results[0][0].transcript;
								$scope.recognition.stop();
								var recText = e.results[0][0].transcript;
								//console.log('rec text', recText);
								var recTextLc = recText ? recText.toLowerCase() : '';
								if(recText //&& (recTextLc.indexOf('hello') >= 0 || recTextLc.indexOf('hi') >= 0 )
									&& recTextLc.indexOf('assistant') >= 0 && 
									recTextLc.indexOf('hello') >= 0) {
									$scope.showSpeechModal();
									document.getElementById('transcript').value = '';
								} else if($scope.assistantSessionId){
									$scope.speechForm.searchText = recText;
									$scope.setSpeechSearch(false);
									$scope.searchByVoice();
								}
								
							  };
							  
							  $scope.recognition.onstop = function(e) {
								//console.log('stopped recognition');
								$scope.setSpeechSearch(false);
							  };
								
							  $scope.recognition.onend = function(e) {
								//console.log('ended recognition');
								$scope.setSpeechSearch(false);
							  };

							$scope.recognition.onerror = function(e) {
								//console.log('error recognition');
								$scope.recognition.stop();
								$scope.setSpeechSearch(false);
							  };
						}
					  $scope.setSpeechSearch(true);
					  $scope.recognition.start();
					}
				};
				
				
				$scope.startDictation();
				
				
				$scope.$watch('speechForm.searchText', function(newVal, oldVal) {
					if(newVal) {
						$scope.showManualSubmitBtn=true;
					} else {
						$scope.showManualSubmitBtn=false;
					}
				});
				
				$scope.answeredQueries = [];
				$scope.speechForm = {};
				$scope.searchByVoice = function() {
					//console.log('Searching by voice: ' + $scope.speechForm.searchText);
					//alert('hello:' + $scope.speechForm.searchText);
					if(!$scope.speechForm.prevIns){
						$scope.speechForm.prevIns = [];
					}
					
					var payload = {
						rawText: $scope.speechForm.searchText,
						prevIns: $scope.speechForm.prevIns,
						sessionId: $scope.assistantSessionId
					};
					if(!$scope.speechForm.answerMap) {
						$scope.speechForm.answerMap = {};
					}
					
					if($scope.speechForm.action === 'pending-user-input') {
						$scope.speechForm.answerMap[$scope.speechForm.answerKey] = $scope.speechForm.searchText;
						//payload.rawText = $scope.speechForm.prevIns.join(" ");
						payload.answerMap = $scope.speechForm.answerMap;
					}
					$scope.analyzing = true;
					assistantDataService.recognizeSearchPattern(payload).then(function(resp) {
						//console.log(resp);
						if(resp.success && resp.data && !angular.equals({}, resp.data)) {
							$scope.speechResp = resp.data;	
							var ans = $scope.speechResp.infomsg + "<br>" + ($scope.speechResp.nextAction || '');
							$scope.answeredQueries.push({question: $scope.speechForm.searchText, answer:ans});
							
							if($scope.speechResp.action === 'pending-user-input'){
								$scope.speechForm.answerKey = $scope.speechResp.answerKey;
								$scope.speechForm.action = $scope.speechResp.action;
								if($scope.speechForm.action === 'pending-user-input') {
									$scope.speechForm.prevIns.push($scope.speechForm.searchText);
								}							
								$scope.speechForm.searchText = '';
								$scope.startRecognition = true;
							} else if ($scope.speechResp.action === 'done'){
								$scope.speechForm = {};
								$scope.startRecognition = false;
							}
							
							if(resp.loginResp) {
								window.localStorage.setItem('c2iSession', resp.loginResp.tkn);
								var udata = {userName:resp.loginResp.email_address
												, first_name: resp.loginResp.first_name
												, last_name:resp.loginResp.last_name
												, loggedIn: resp.loginResp.loggedIn,
												subscription: resp.loginResp.subscription};

								//$rootScope.userInfo = udata;
								$scope.userInfo = udata;
								window.localStorage.setItem('c2iSessionInfo', btoa(JSON.stringify(udata)));
								$http.defaults.headers.common['X-Auth-Token'] = resp.loginResp.tkn;
							}
							
							if($scope.speechResp.action === 'notRecognized') {
								alert('Could not recognize the pattern. Please try again with other options');
							} else {
								var $html = $('<div />',{html: $scope.speechResp.infomsg});
								var titleElmnts=$html.find('.speak');
								var idx = 0;
								$scope.$watch('speakingText', function(newVal, oldVal) {
									if(!newVal && idx < titleElmnts.length) {
										var ih = $(titleElmnts[idx++]).text();
										if(idx == titleElmnts.length - 1 && $scope.startRecognition) {
											$scope.speakText(ih, $scope.t2sCallback);
										} else {
											$scope.speakText(ih);
										}
									}									
								});
							}
						} else {
							alert('Could not recognize the pattern. Please try again with other options');
						}
						
					})['finally'](function() {
						$scope.analyzing = false;
					});
				};
				
				speechSynthesis.onvoiceschanged = function () {
					// get the voice
					if(!$scope.preferredVoice) {
						var voices = speechSynthesis.getVoices();
						//console.log(voices);
						$scope.preferredVoice = voices.filter(function (voice) {
							return voice.name == 'Google US English'; //'Google UK English Female'; //'Google US English';'Google हिन्दी';
						})[0];
					}					
				};
					// say a message
				var u = new SpeechSynthesisUtterance();
				u.onend = function () {
					$scope.speakingText = false;
					if ($scope.callSpeechCallback) {
						$scope.t2sCallback();
					}
				};
			 
				u.onerror = function (e) {
					$scope.speakingText = false;
					if (callback) {
						callback(e);
					} else if ($scope.callSpeechCallback) {
						$scope.t2sCallback();
					}
				};
					
				$scope.speakText = function(text, callback) {
					//console.log('Speaking.......');
					$scope.speakingText = true;
					if($scope.recognition) {
						$scope.recognition.stop();
					}
					
					u.text = text;
					if($scope.preferredVoice) {
						u.voice = $scope.preferredVoice;
					}
					u.lang = 'en-US';
				 
					if(callback) {
						$scope.callSpeechCallback = true;
					}
					
					speechSynthesis.speak(u);
				};
				
				$scope.checkAssistant = function() {
					//console.log('checking assistantWorking');
					if(!$scope.assistantWorking && !$scope.speechStarted) {
						$scope.startDictation();
						setTimeout($scope.checkAssistant, 3000);
					} else if(!$scope.assistantWorking) {
						setTimeout($scope.checkAssistant, 3000);
					}
				};	
				$scope.checkAssistant();
			}
		};
	});